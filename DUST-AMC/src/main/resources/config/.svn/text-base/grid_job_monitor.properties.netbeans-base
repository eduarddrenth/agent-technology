# connect to a certain host using a certain port
 #host							= 194.122.206.186
host                            = alegre.science.uva.nl
port							= 1099
# we use http when a proxy is needed
#connection-manager					= jade.imtp.leap.JICP.BIFEDispatcher
#jade.imtp.leap.http.HTTPFEDispatcher, jade.imtp.leap.JICP.BIFEDispatcher or jade.imtp.leap.JICP.FrontEndDispatcher

###############################################################
# when connecting to a backend service, the preferred way to do split container, we can use a Frontenddispatcher, it uses one
# full duplex connection instead of two connections
# comment out icps if you want to go for this option
###############################################################
connection-manager					= jade.imtp.leap.JICP.BIFESDispatcher
mediator-class						= jade.imtp.leap.nio.NIOBEDispatcher
# possible dispatchers, the http is not mature, but offers connection through proxy

#jade.imtp.leap.http.HTTPFEDispatcher, jade.imtp.leap.JICP.BIFEDispatcher or jade.imtp.leap.JICP.FrontEndDispatcher

#icps                            = jade.imtp.leap.JICP.JICPSPeer

# start some agents
#agents							= USERNOTIFICATION:com.logica.amc.user.NotificationAgent(agentname|USERNOTIFICATION,containername|USER)
#icps							= jade.imtp.leap.JICP.JICPPeer(1099);
#name                            = SentinelPlatform
container                       = true
#container-name                  = USER
#msisdn                          = USER
nomtp                           = true

# application properties

stderr=std.err

splitcontainer=true