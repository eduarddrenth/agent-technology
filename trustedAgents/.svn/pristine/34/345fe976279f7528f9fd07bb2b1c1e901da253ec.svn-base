<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<!--NewPage-->


<!-- Generated by javadoc (build 1.6.0_16) on Thu Mar 11 13:20:25 CET 2010 -->
<title>
SecurityService (TrustedAgent)
</title>

<meta name="date" content="2010-03-11">

</head><body  bgcolor="white">


<p>
This simple SecurityService facilitates security for {@link VerticalCommand}s,
for example making sure only agents with a token that can be validated will
be allowed to join the Jade Platform. The way it works is that at a regular
container a token is retrieved and connected to an agent AID, at the
Main-Container (or mediator) the token is extracted from the AID and
validated. Retrieving a token and validating is a matter of implementing two
very simple interfaces. Validating can be done using for example an external
LDAP. The Service
can contain a <a href="TokenProvider.html" title="interface in org.logica.ctis.security"><code>TokenProvider</code></a> or a <a href="TokenValidator.html" title="interface in org.logica.ctis.security"><code>TokenValidator</code></a>.
 </p><ul>
 <li>A TokenProvider provides a token for a GenericCommand, the service then connects the token to the command</li>


 <li>A
TokenValidator retreives a token from a GenericCommand, the service
then calls validate with the token, command and <code>AID</code> as arguments</li>
 </ul>
 Building a TokenProvider or a Validator is left to users of this security service.
 <ul>
 <li>configuration at main container</li>
 </ul>
 <pre>    services=org.logica.ctis.security.SecurityService(true)
    org.logica.ctis.security.SecurityService_trustedAgentNames=ams;rma;df
    org.logica.ctis.security.SecurityService_tokenvalidator=validatorClassname
 </pre>
 <ul>
 <li>configuration at 'client' container</li>
 </ul>
 <pre>    services=org.logica.ctis.security.SecurityService
    org.logica.ctis.security.SecurityService_tokenprovider=providerClassname
 </pre>
 <ul>
 <li>configuration at split 'client' container</li>
 </ul>
 <pre>    be-required-services=org.logica.ctis.security.SecurityService
    At the runtime where the 'mediator' lives: org.logica.ctis.security.SecurityService_tokenprovider=providerClassname
    or you can do validation at the mediator: org.logica.ctis.security.SecurityService_tokenvalidator=validatorClassname
    when doing validation at the mediator you probably won't use validation at the main-container
 </pre>
<p>

</p><p>
</p><dl>
<dt><b>Author:</b></dt>
  <dd>Eduard Drenth: Logica, 28-jan-2010</dd>
</dl>

</body></html>